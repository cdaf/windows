# https://docs.microsoft.com/en-us/azure/devops/pipelines/get-started-yaml
# https://docs.microsoft.com/en-us/azure/devops/pipelines/process/variables
# https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/hosted?view=vsts&tabs=yaml

name: $(Rev:r)
# name: $(TeamProject)_$(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

pool:
  vmImage: 'windows-latest'
#  vmImage: 'windows-2019'

trigger:
  branches:
    include:
    - '*'

# For a private pool, in this example, named Private requiring the capability of PowerShell
#pool: 
#  name: Azure
#  demands: PowerShell

# or pool with no demands
#pool: Default

variables:
  - group: Git-Reader-for-Branch-Clean-up
    # Must explicitely load secrets into a variable that is NOT the same as the variable itself, i.e. name cannot be GIT_PASSWORD
  - name: gitPass
    value: $[variables.GIT_PASSWORD]

steps:
  - script: automation\entry.bat "$(Build.BuildNumber)" "$env:Build_SourceBranchName" "staging@$env:Build_ArtifactStagingDirectory"
    env: 
      GIT_USERNAME: $[variables.GIT_USERNAME]
      GIT_PASSWORD: $(gitPass)

# For installed instance of CDAF, in the agents user profile in this example
#  - script: "%USERPROFILE%\\.cdaf\\entry.bat \"$(Build.BuildNumber)\" \"$(Build.SourceBranchName)\" \"staging@$(Build.ArtifactStagingDirectory)\""

# Require explicit exit code if using a multi-line script
# - script: |
#     $env:READ_ONLY_PAT=$(READ_ONLY_PAT)
#     ~/cdaf/processor/entry.ps1 "$env:Build_BuildNumber" "$env:Build_SourceBranchName" "staging@$env:Build_ArtifactStagingDirectory"
#     $LASTEXITCODE=$?
#     if ( $LASTEXITCODE != "0" ) { exit $$LASTEXITCODE }

#  env:
#    MAVEN_ARTIFACT_TOKEN: $(MAVEN_ARTIFACT_TOKEN)

#- task: PublishTestResults@2
#  inputs:
    #testResultsFormat: 'JUnit' # Options: JUnit, NUnit, VSTest, xUnit, cTest
    #testResultsFiles: '**/TEST-*.xml' 
    #searchFolder: '$(System.DefaultWorkingDirectory)' # Optional
    #mergeTestResults: true # Optional
    #failTaskOnFailedTests: true # Optional
    #testRunTitle: # Optional
    #buildPlatform: # Optional
    #buildConfiguration: # Optional
    #publishRunAttachments: true # Optional

  - task: PublishBuildArtifacts@1
    #ArtifactName: 'drop'
    #publishLocation: 'Container'