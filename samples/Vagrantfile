# -*- mode: ruby -*-
# vi: set ft=ruby :

#> vagrant plugin install vagrant-reload
require 'vagrant-reload'

# Minimum members for a failover cluster is 2
# [Environment]::SetEnvironmentVariable('NUMBER_OF_MEMBERS', '4', 'Machine')
if ENV['NUMBER_OF_MEMBERS']
  memberCount = ENV['NUMBER_OF_MEMBERS'].to_i
else
  memberCount = 2
end

# Standard Scale factor used for build server (not as resource intensive as the Mule)
# [Environment]::SetEnvironmentVariable('SCALE_FACTOR', '2', 'Machine')
if ENV['SCALE_FACTOR']
  memberScale = ENV['SCALE_FACTOR'].to_i
else
  memberScale = 1
end
memberRAM = 1024 * memberScale

Vagrant.configure(2) do |allhosts|

  # Domain Controller
  allhosts.vm.define 'dc' do |dc|
    dc.vm.box = 'cdaf/WindowsServerDC'
    dc.vm.box_check_update = false 
    dc.vm.boot_timeout = 900 # 15 minutes
    dc.vm.communicator = 'winrm'
    dc.winrm.timeout = 1200 # 20 minuites
    dc.winrm.retry_limit = 10
    dc.vm.provider 'virtualbox' do |virtualbox, override|
      virtualbox.memory = 2048
      virtualbox.cpus = 2
      override.vm.network 'private_network', ip: '172.16.17.100'
    end
  end

  (1..memberCount).each do |i|
    allhosts.vm.define "member-#{i}" do |member|
      member.vm.box = 'cdaf/WindowsServer' # Windows Server 2016 with GUI
      member.vm.box_check_update = false
      member.vm.boot_timeout = 900
      member.vm.communicator = 'winrm'
      member.winrm.timeout = 1200 # 20 minuites
      member.winrm.retry_limit = 10
      # VirtualBox for Desktop Environment
      member.vm.provider 'virtualbox' do |virtualbox, override|
        virtualbox.memory = "#{memberRAM}"
        virtualbox.cpus = "#{memberScale}"
        override.vm.network 'private_network', ip: "172.16.17.10#{i}"
        override.vm.provision 'shell', inline: '$zipFile = "WU-CDAF.zip"; $url = "http://cdaf.io/static/app/downloads/$zipFile"; (New-Object System.Net.WebClient).DownloadFile($url, "$PWD\$zipFile"); Add-Type -AssemblyName System.IO.Compression.FileSystem; [System.IO.Compression.ZipFile]::ExtractToDirectory("$PWD\$zipfile", "$PWD")'
        override.vm.provision 'shell', inline: './automation/provisioning/setDNS.ps1 172.16.17.100'
        override.vm.provision 'shell', inline: "./automation/provisioning/newComputer.ps1 sky.net"
        override.vm.provision :reload
        override.vm.provision 'shell', inline: "DISM /Online /Enable-Feature /FeatureName:FailoverCluster-Mgmt /FeatureName:FailoverCluster-FullServer /FeatureName:FailoverCluster-PowerShell /All"
        override.vm.provision 'shell', inline: "DISM /online /Get-Features /Format:Table | findstr Fail"
      end
    end
  end

end
