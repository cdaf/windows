Write-Host "`nLoad the branch (REVISION) and container image from the manifest, placed here by package.tsk`n"
PROPLD manifest.txt

ASSIGN $id = $("${SOLUTION}_${REVISION}").ToLower()

# Copy any artefacts needed into specific images here, example brings in remoteTasks package
# VECOPY ..\${SOLUTION}-${BUILDNUMBER}.zip compose/target/deploy.zip

Write-Host "Reinstate CDAF scripts to default directory name"
mv cdaf automation

cd compose
..\imageBuild.ps1 ${id} ${BUILDNUMBER} ${containerImage}
cd ..

ASSIGN $env:TARGET_TAG = "${id}_target"
ASSIGN $env:TEST_TAG = "${id}_test"
& $WORKSPACE\dockerClean.ps1 $env:TARGET_TAG ${BUILDNUMBER}
& $WORKSPACE\dockerClean.ps1 $env:TEST_TAG ${BUILDNUMBER}

Write-Host "List containers current state`n"
docker ps

Write-Host "Load desired state to persistent store`n"
ASSIGN $composePersist = "${env:TEMP}\${id}"
MAKDIR $composePersist
cd $composePersist
$env:WORK_SPACE = $(pwd)

Write-Host "`nCleanup from previously test`n"
if ( Test-Path docker-compose.yml ) { EXECMD "docker-compose down --remove-orphans" }

$parent = Split-Path -parent $WORKSPACE
Write-Host "`nLoad current artefact set from $parent`n"
VECOPY $WORKSPACE\compose\docker-compose.yml $composePersist
REFRSH $parent\TasksLocal $composePersist\TasksLocal

Write-Host "Set the build number to use`n"
ASSIGN $env:TARGET_TAG = "${env:TARGET_TAG}:${BUILDNUMBER}"
ASSIGN $env:TEST_TAG = "${env:TEST_TAG}:${BUILDNUMBER}"

EXECMD "docker-compose up -d target"

Write-Host "Deploy to target (allow up to 2 minutes)`n"
$containerID = $(docker ps -aq --filter "ancestor=$env:TARGET_TAG")
& $WORKSPACE\dockerLog.ps1 $containerID 'Delivery Process Complete' 120

EXECMD "docker-compose up -d test"

Write-Host "Execute tests (allow 5 minutes to complete)`n"
$containerID = $(docker ps -aq --filter "ancestor=$env:TEST_TAG")
& $WORKSPACE\dockerLog.ps1 $containerID 'Automated Test Execution completed successfully.' 300

Write-Host "`nTear down if `$env:COMPOSE_KEEP ($env:COMPOSE_KEEP) not set`n"
if ( $env:COMPOSE_KEEP ) { docker inspect -f '{{.Name}} - {{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(docker ps -aq) } else { EXECMD "docker-compose down" }

cd $WORKSPACE

echo "Clean-up Transient Directory Created by imageBuild.sh"
REMOVE $env:TEMP/${SOLUTION}
