node  {
  properties(
    [
      [
        $class: 'BuildDiscarderProperty',
        strategy: [$class: 'LogRotator', numToKeepStr: '10']
      ],
      pipelineTriggers(
        [
	      [$class: "SCMTrigger", scmpoll_spec: "H/3 * * * *"],
	    ]
	  )
    ]
  )
}

node {
  try {
    withEnv(["BRANCH_NAME=${env.BRANCH_NAME}"]) {
      stage ('Application Build and Test') {
        checkout scm
        bat "automation\\ci.bat ${BUILD_NUMBER} ${BRANCH_NAME}"
      }
    }

    if ( env.BRANCH_NAME == 'master' ) {

      stage ('Automated Test') {
        bat "TasksLocal\\delivery.bat CD"
      }

      stage ('Acceptance Test') {
        bat "TasksLocal\\delivery.bat TEST"
      }

      stage ('Product Owner Approval') { input "Deploy to Production?" }

      stage ('Production') {
        bat "TasksLocal\\delivery.bat PROD"
      }
    }
  }
    
  catch (e) {
    currentBuild.result = "FAILED"
    println currentBuild.result
    notifyFailed()
    throw e
  }

  finally {
    junit '**/test-results/*.xml'
  }
}

def notifyFailed() {

  emailext (
    recipientProviders: [[$class: 'DevelopersRecipientProvider']],
    subject: "Jenkins Job [${env.JOB_NAME}] Build [${env.BUILD_NUMBER}] failure",
    body: "Check console output at ${env.BUILD_URL}"
  )
}