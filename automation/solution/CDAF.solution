solutionName=myproduct
# productName=My Product Name

# containerBuild=& $AUTOMATIONROOT/processor/containerBuild.ps1 ${SOLUTION} ${BUILDNUMBER} ${REVISION}
# containerImage=mcr.microsoft.com/windows/servercore:ltsc2019@sha256:acae9dedd8ce6fbc624e8c4b52555a9d3201eb47aacd45b4a00e0d81083b4cab
# CDAF_ERROR_DIAG=foreach ( $item in ( Get-WmiObject Win32_LogicalDisk )) { get-volume -DriveLetter ($item.DeviceID).split(":")[0] }

# constructor=TasksLocal
# imageBuild=& $AUTOMATIONROOT/remote/imageBuild.ps1 ${SOLUTION}_${REVISION} ${BUILDNUMBER} $runtimeImage $constructor
# runtimeImage=mcr.microsoft.com/windows/servercore:ltsc2019@sha256:acae9dedd8ce6fbc624e8c4b52555a9d3201eb47aacd45b4a00e0d81083b4cab
# CDAF_REGISTRY_URL=${env:CI_REGISTRY}
# CDAF_REGISTRY_TAG=${env:CI_REGISTRY}/linux/${env:SOLUTION}:$BUILDNUMBER
# CDAF_REGISTRY_USER=${env:CI_REGISTRY_USER}
# CDAF_REGISTRY_TOKEN=${env:CI_JOB_TOKEN}

artifactPrefix=0.0
# productVersion=0.0.0

# defaultBranch=main
# defaultEnvironment=windows

# gitRemoteURL=https://github.com/cdaf/${SOLUTION}.git
# gitUserNameEnvVar=${env:GIT_USER}
# gitUserPassEnvVar=${env:GIT_PASS}
# gitCustomCleanup=& $AUTOMATIONROOT/buildandpackage/clean.ps1

# processSequence=localTasks.ps1 remoteTasks.ps1 containerTasks.ps1
# containerDeploy=& ${CDAF_WORKSPACE}/containerDeploy.ps1 "${ENVIRONMENT}" "${RELEASE}" "${SOLUTION}" "${BUILDNUMBER}" "${REVISION}" compose/test
